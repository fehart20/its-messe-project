// <auto-generated />
using System;
using Messe_Projekt_Client;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Messe_Projekt_Client.Migrations
{
    [DbContext(typeof(MesseDbContext))]
    [Migration("20240130112841_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Messe_Projekt_Client.Anschrift", b =>
                {
                    b.Property<int>("AnschriftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hausnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("KundeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Plz")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AnschriftId");

                    b.HasIndex("KundeId")
                        .IsUnique();

                    b.ToTable("Anschrift");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Firma", b =>
                {
                    b.Property<int>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnschriftId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FirmaId");

                    b.HasIndex("AnschriftId");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Interesse", b =>
                {
                    b.Property<int>("InteresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KundeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProduktgruppeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("InteresseId");

                    b.HasIndex("KundeId");

                    b.ToTable("Interesse");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Kunde", b =>
                {
                    b.Property<int>("KundeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KundeId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Kunde");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Anschrift", b =>
                {
                    b.HasOne("Messe_Projekt_Client.Kunde", "Kunde")
                        .WithOne("Anschrift")
                        .HasForeignKey("Messe_Projekt_Client.Anschrift", "KundeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kunde");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Firma", b =>
                {
                    b.HasOne("Messe_Projekt_Client.Anschrift", "Anschrift")
                        .WithMany()
                        .HasForeignKey("AnschriftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anschrift");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Interesse", b =>
                {
                    b.HasOne("Messe_Projekt_Client.Kunde", null)
                        .WithMany("Interessen")
                        .HasForeignKey("KundeId");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Kunde", b =>
                {
                    b.HasOne("Messe_Projekt_Client.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId");

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("Messe_Projekt_Client.Kunde", b =>
                {
                    b.Navigation("Anschrift")
                        .IsRequired();

                    b.Navigation("Interessen");
                });
#pragma warning restore 612, 618
        }
    }
}
